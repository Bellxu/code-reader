package com.loopeer.codereaderkt.utils

import java.util.ArrayList
import java.util.HashMap
import java.util.Map

class BrushMap {
    init {
        if (mapping == null) {
            mapping = HashMap()
            init()
        }
    }

    companion object {
        var mapping: HashMap<String, MutableList<String>>? = null

        init {
            BrushMap()
        }

        fun init() {
            var list= mutableListOf<String>()
            list.add("actionscript3")
            list.add("as3")
            mapping!!.put("AS3", list)
            list = ArrayList()
            list.add("applescript")
            list.add("scpt")
            mapping!!.put("AppleScript", list)
            list = ArrayList()
            list.add("bash")
            list.add("shell")
            list.add("sh")
            list.add("rc")
            list.add("conf")
            mapping!!.put("Bash", list)
            list = ArrayList()
            list.add("coldfusion")
            list.add("cfm")
            list.add("cf")
            mapping!!.put("ColdFusion", list)
            list = ArrayList()
            list.add("cpp")
            list.add("c")
            list.add("cc")
            list.add("h")
            list.add("hpp")
            mapping!!.put("Cpp", list)
            list = ArrayList()
            list.add("c#")
            list.add("c-sharp")
            list.add("csharp")
            list.add("cs")
            mapping!!.put("CSharp", list)
            list = ArrayList()
            list.add("css")
            mapping!!.put("Css", list)
            list = ArrayList()
            list.add("delphi")
            list.add("pascal")
            list.add("pas")
            list.add("simba")
            mapping!!.put("Delphi", list)
            list = ArrayList()
            list.add("diff")
            list.add("patch")
            mapping!!.put("Diff", list)
            list = ArrayList()
            list.add("erl")
            list.add("hrl")
            mapping!!.put("Erlang", list)
            list = ArrayList()
            list.add("groovy")
            mapping!!.put("Groovy", list)
            list = ArrayList()
            list.add("java")
            mapping!!.put("Java", list)
            list = ArrayList()
            list.add("jfx")
            list.add("javafx")
            mapping!!.put("JavaFX", list)
            list = ArrayList()
            list.add("js")
            list.add("jscript")
            list.add("javascript")
            mapping!!.put("JScript", list)
            list = ArrayList()
            list.add("perl")
            list.add("pl")
            mapping!!.put("Perl", list)
            list = ArrayList()
            list.add("php")
            mapping!!.put("Php", list)
            list = ArrayList()
            list.add("text")
            list.add("plain")
            list.add("rst")
            list.add("txt")
            mapping!!.put("Plain", list)
            list = ArrayList()
            list.add("powershell")
            list.add("ps")
            list.add("ps1")
            mapping!!.put("PowerShell", list)
            list = ArrayList()
            list.add("py")
            list.add("python")
            mapping!!.put("Python", list)
            list = ArrayList()
            list.add("ruby")
            list.add("rails")
            list.add("ror")
            mapping!!.put("Ruby", list)
            list = ArrayList()
            list.add("sass")
            list.add("scss")
            mapping!!.put("Sass", list)
            list = ArrayList()
            list.add("scala")
            mapping!!.put("Scala", list)
            list = ArrayList()
            list.add("sql")
            mapping!!.put("Sql", list)
            list = ArrayList()
            list.add("v")
            list.add("sv")
            mapping!!.put("Verilog", list)
            list = ArrayList()
            list.add("vb")
            list.add("vbnet")
            mapping!!.put("Vb", list)
            list = ArrayList()
            list.add("xml")
            list.add("xslt")
            list.add("htm")
            list.add("html")
            list.add("xhtml")
            list.add("xaml")
            list.add("iml")
            list.add("plist")
            list.add("storyboard")
            list.add("xcworkspacedata")
            list.add("xcscheme")
            mapping!!.put("Xml", list)
            list = ArrayList()
            list.add("gradle")
            mapping!!.put("Gradle", list)
            list = ArrayList()
            list.add("txt")
            list.add("bat")
            list.add("pbxproj")
            mapping!!.put("Txt", list)
            list = ArrayList()
            list.add("pro")
            mapping!!.put("Pro", list)
            list = ArrayList()
            list.add("properties")
            mapping!!.put("Properties", list)
            list = ArrayList()
            list.add("json")
            mapping!!.put("Json", list)
            list = ArrayList()
            list.add("swift")
            mapping!!.put("Swift", list)
            list = ArrayList()
            list.add("go")
            mapping!!.put("Go", list)
            list.add("ino")
            mapping!!.put("Arduino", list)
        }

        fun getJsFileForExtension(paramString: String?): String? {
            var paramString = paramString
            paramString = paramString?.toLowerCase()
            val localIterator = mapping!!.entries.iterator()
            while (localIterator.hasNext()) {
                val localEntry = localIterator.next() as Map.Entry<*, *>
                if ((localEntry.value as List<*>).indexOf(paramString) != -1) {
                    return localEntry.key .toString()
                }
            }
            return null
        }
    }
}
